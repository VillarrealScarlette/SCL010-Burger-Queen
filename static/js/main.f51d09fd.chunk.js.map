{"version":3,"sources":["data/firebase.js","components/menu/Breakfast.js","components/menu/Lunch.js","views/LinkTab.js","views/Menu.js","data/data.js","views/OrdersReady.js","views/products.js","views/OrdersRecords.js","views/OrdesInKitchen.js","App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Breakfast","state","coffee","sandwich","sandwiches","coffeOptions","this","map","item","Grid","xs","Button","variant","color","key","id","onClick","props","addOrder","bind","value","name","sandwishOptions","container","spacing","React","Component","Lunch","burger","burgers","sideDish","sideDishes","drink","drinks","burgersOptions","sideDishsOptions","drinksOptions","LinkTab","Tab","component","Link","Menu","title","waiter","table","order","display","flexWrap","textField","width","rows","total","handleChange","event","setState","target","changeTheWorld","newTitle","addOrders","e","orders","push","price","newTotal","sentOrder","orderReady","firestore","collection","add","className","Tabs","aria-label","label","to","noValidate","autoComplete","TextField","onChange","margin","path","render","Paper","Table","TableHead","TableRow","TableCell","TableBody","row","product","data","retrieve","Promise","resolve","reject","where","get","then","querySnapshot","forEach","doc","catch","error","console","log","OrdersReady","changeState","currentTarget","set","merge","componentDidMount","Products","Array","from","OrdersRecords","date","Date","dateCreate","getDate","getMonth","getFullYear","time","getHours","getMinutes","OrdersInKitchen","useStyles","makeStyles","root","flexGrow","App","classes","useState","setValue","AppBar","position","newValue","centered","OrdesInKitchen","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f51d09fd.chunk.js","sourcesContent":["import * as firebase from 'firebase';\n//import firestore from 'firebase/firestore'\n\n // Your web app's Firebase configuration\n var firebaseConfig = {\n    apiKey: \"AIzaSyDCFb-SS9oHu8uji-uDP6cx4oThhfAee8A\",\n    authDomain: \"burger-queen-427aa.firebaseapp.com\",\n    databaseURL: \"https://burger-queen-427aa.firebaseio.com\",\n    projectId: \"burger-queen-427aa\",\n    storageBucket: \"burger-queen-427aa.appspot.com\",\n    messagingSenderId: \"265081605680\",\n    appId: \"1:265081605680:web:cd6e7c37215e3bfe74e7f5\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n\n  export default firebase;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { coffee, sandwiches } from '../../data/menu.json'\n\n  // const coffee = coffee\n  // const sandwich = sandwiches\n\n  export default class Breakfast extends React.Component{ \n    constructor() {\n      super();\n      this.state = {\n        coffee: coffee,\n        sandwich: sandwiches\n      };\n    }\n\n    render() {\n    const coffeOptions = this.state.coffee.map((item) => {\n      return (\n        <Grid item xs>\n         <Button \n         variant=\"contained\" \n         color=\"#ffffff\" \n         key={item.id} \n         onClick={this.props.addOrder.bind(this, item)} \n         value={item.name}>\n          {item.name}\n          </Button>\n        </Grid>\n      )\n    })\n    const sandwishOptions = this.state.sandwich.map((item) => {\n      return (\n        <Grid item xs>\n          <Button \n          variant=\"contained\" \n          color=\"#ffffff\" key={item.id} \n          onClick={this.props.addOrder.bind(this, item)} \n          value={item.name}>\n          {item.name}\n          </Button>\n        </Grid>\n      )\n    })\n    return ( \n      <div>\n        <div>\n          <h5>Cafeteria</h5>\n          <Grid container spacing={1}>{coffeOptions}</Grid>\n        </div>\n        <div>\n          <h5>Sandwiches</h5>\n          <Grid container spacing={1}>{sandwishOptions}</Grid> \n        </div>\n      </div>\n    )\n  }\n}\n\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport { burgers, sideDishes, drinks } from '../../data/menu.json';\n\nexport default class Lunch extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      burger: burgers,\n      sideDish: sideDishes,\n      drink: drinks,\n    }\n  }\n\n  render() { \n    const burgersOptions = this.state.burger.map((item) => {\n      return (\n        <Grid item xs>\n          <Button \n          variant=\"contained\" \n          color=\"#ffffff\" \n          key={item.id} \n          onClick={this.props.addOrder.bind(this, item)} \n          value={item.name}>\n          {item.name}\n          </Button>\n        </Grid>\n        \n      )\n    })\n    const sideDishsOptions = this.state.sideDish.map((item) => {\n      return (\n        <Grid item xs>\n          <Button \n          variant=\"contained\" \n          color=\"#ffffff\" \n          key={item.id} \n          onClick={this.props.addOrder.bind(this, item)} \n          value={item.name}>\n          {item.name}\n          </Button>\n        </Grid>\n      )\n    })\n    const drinksOptions = this.state.drink.map((item) => {\n      return (\n        <Grid item xs>\n          <Button \n          variant=\"contained\" \n          color=\"#ffffff\" \n          key={item.id} \n          onClick={this.props.addOrder.bind(this, item)} \n          value={item.name}>\n          {item.name}\n          </Button>\n        </Grid>\n      )\n    })\n    return ( \n      <div>\n        <div>\n          <h3>Hamburgesas</h3>\n          <Grid container spacing={1}>{burgersOptions}</Grid>\n        </div>\n        <div>\n          <h3>Acompañamientos</h3>\n          <Grid container spacing={1}>{sideDishsOptions}</Grid> \n        </div>\n        <div>\n          <h3>Bebestibles</h3>\n          <Grid container spacing={1}>{drinksOptions}</Grid> \n        </div>\n      </div>\n     );\n  }\n}","import React from 'react';\nimport { Link } from \"react-router-dom\";\n//importando material-iu\nimport Tab from '@material-ui/core/Tab';\n\nconst LinkTab = (props) => {\n    return (\n      <Tab component={Link} {...props}/>\n    );\n  }\n\nexport default LinkTab;","import React, { Component } from 'react';\nimport firebase from '../data/firebase.js'\nimport '../App.css';\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\nimport Breakfast from '../components/menu/Breakfast';\nimport Lunch from '../components/menu/Lunch';\n\n//importando material-iu\nimport LinkTab from './LinkTab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Button from '@material-ui/core/Button';\n\nexport default class Menu extends Component {\n\n    state = {\n    title:'placeholder title',\n    state:\"kitchen\",\n    waiter:\"\",\n    table:\"\",\n    order:[],\n    value:\"\",\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',        \n      },\n    textField: {\n        width: 200,       \n      },\n    rows:[],\n    total: 0\n    } \n\n  handleChange = name => event => {\n    this.setState({value: {\n        name:event.target.value,\n        waiter:event.target.value,\n        table:event.target.value,\n    }}); \n  };\n /*orders=()=>{\n    let products=[\n    {\n     \"waiter\":this.state.waiter,\n     \"table\":this.state.table,\n     \"state\":this.state.state\n     }\n    ] \n    return products\n    }\n  \n    send = (products) => {\n      const db = firebase.firestore();\n      products.forEach(orders=>{\n        // colección creada\n      db.collection(\"products\").add(orders)\n      });\n    }*/\n\n  changeTheWorld = (newTitle) => {\n      this.setState({title:newTitle});\n  }\n\n  addOrders = (e) => {\n    let orders=this.state.rows;\n    orders.push({name:e.name,\n    price:`$${e.price}`});\n    this.setState({rows:orders});\n    let currentTotal = this.state.total;\n    let addToTotal = e.price;\n    let newTotal = currentTotal + addToTotal;\n    this.setState({total: newTotal})\n  }\n\n  sentOrder = () => {\n   let orderReady =\n    {order: this.state.rows,\n    waiter:\"Luna\",\n    table:\"5\",\n    state:\"kitchen\"\n    }\n    const db = firebase.firestore();\n    db.collection(\"orders\").add(orderReady)\n  }\n  \n\n  render() {\n    return (\n        \n    <div className=\"menu2\">\n  \n    <Router>\n    <div>\n      <Grid container spacing={12}>\n        <Grid item xs={12}>\n        <Tabs className=\"barMenu2\" variant=\"fullWidth\" aria-label=\"nav tabs example\">\n          <LinkTab label=\"desayuno\" to=\"/menu/breakfast\"/>\n          <LinkTab label=\"almuerzo\" to=\"/menu/lunch\"/>\n        </Tabs>    \n        </Grid>\n        <Grid item xs={5}>\n        <form className={this.container} noValidate autoComplete=\"off\">\n        <TextField\n          className={this.textField}\n          id=\"waiter\"\n          label=\"Nombre del Mesero\"\n          onChange={this.handleChange('name')}\n          margin=\"normal\"\n        />\n          <TextField\n          className={this.textField}\n          id=\"table\"\n          label=\"Mesa\"\n          onChange={this.handleChange('name')}\n          margin=\"normal\"\n        />\n        </form>\n        <Route path=\"/menu/breakfast\" render={(props) => <Breakfast {...props} addOrder={this.addOrders}/>}/>\n        <Route path=\"/menu/lunch\"render={(props) => <Lunch {...props} addOrder={this.addOrders}/>}/>\n        </Grid>\n        <Grid item xs={1}></Grid>\n        <Grid item xs={6}> \n        <Paper>\n          <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Productos</TableCell>\n              <TableCell>Valor</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {this.state.rows.map(row => (\n              <TableRow key={row.product}>\n                <TableCell>{row.name}</TableCell>\n                <TableCell>{row.price}</TableCell>\n              </TableRow>\n            ))}\n          <TableCell><h3>Total:</h3></TableCell>\n          <TableCell><h3>{`$${this.state.total}`}</h3></TableCell>\n          </TableBody>\n        </Table>\n      </Paper>\n      <Button onClick={this.sentOrder}>Enviar Pedido</Button>\n        </Grid> \n        </Grid>\n    </div>\n    </Router>\n    </div>\n    );\n  }\n}","import firebase from './firebase.js'\n\nconst db = firebase.firestore();\nconst data = db.collection('orders');\n\n//obtener datos de firebase  \n\nconst retrieve = (state) => {\n\n    return new Promise((resolve, reject) => {\n        data.where(\"state\", \"==\", state)\n            .get()\n            .then(function (querySnapshot) {\n                let orders = [];\n                querySnapshot.forEach(function (doc) {\n                    let data=doc.data()\n                    data[\"id\"]=doc.id\n                    orders.push(data)\n\n                });\n                resolve(orders)\n            })\n            .catch(function (error) {\n                console.log(\"Error getting documents: \", error);\n                reject(error)\n            });\n\n    })\n};\n\n/*/añadir datos a firebase\nconst add = (product) => {\n    data.add(product);\n}\n\n\n//actualizar datos en firebas\n\nconst update = (id, product) => {\n    data.doc(id).set(product, {\n        merge: true\n    })\n}\n\n\nexport const save = () => {\n\n    // colección creada\n    db.collection(\"posts\").add({\n           \n        })\n        .then(function (docRef) {\n            console.log(\"Document written with ID: \", docRef.id);\n        })\n        .catch(function (error) {\n            console.error(\"Error adding document: \", error);\n        });\n};\n\nexport const showPost = () => {\n    let db = firebase.firestore();\n    let docRef = db.collection(\"posts\").orderBy(\"timestamp\", \"desc\");\n    return docRef.get();\n\n};*/\nexport default retrieve;","import React from 'react';\nimport '../App.css';\nimport retrieve from '../data/data.js';\nimport firebase from '../data/firebase.js'\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\n\n\nclass OrdersReady extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n     orders:[]\n    }\n  }\n\n  componentDidMount() {\n    retrieve(\"ready\")\n    .then(orders => this.setState({ orders: orders }))\n  }\n  changeState=(e)=>{\n    let id= e.currentTarget.value\n    const db = firebase.firestore();\n    const data = db.collection('orders');\n    data.doc(id).set({\n      state:\"record\"\n  }, { merge: true })\n  .then (\n    ()=>{\n      this.componentDidMount();\n    }\n  )\n  }\n\n  \n\n  render() { \n\n    const orders = this.state.orders.map((item, ) => {\n      return (\n\n        <div className=\"post\">\n              <div className=\"postfont\">\n             <p>mesero: {item.waiter}</p> \n             <p>mesa: {item.table}</p>  \n             </div>\n             <Button value={item.id} onClick={this.changeState}>para entregar</Button>\n                 \n        </div>        \n      )\n    })\n    return ( \n      <div>\n         <p className=\"barMenu3\">PEDIDOS PARA ENTREGAR A CLIENTES</p>\n          <Grid container spacing={1}>\n             {orders}\n            </Grid>\n            \n        </div>\n     );\n  }\n}\n\nexport default OrdersReady;","import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n\nconst Products = (props) => {\n    let list = Array.from(props.orders)\n    return (\n        list.map((order) => {  \n            return (\n            <TableRow key={order.name}>\n            <TableCell>{order.name}</TableCell>\n            <TableCell>{order.price}</TableCell>\n          </TableRow>\n          )\n      })\n    );\n  }\n\nexport default Products;","import React from 'react';\nimport '../App.css';\nimport retrieve from '../data/data.js';\n\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Products from './products';\n\nclass OrdersRecords extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n     orders:[]\n    }\n  }\n\n  componentDidMount() {\n    retrieve(\"record\")\n    .then(orders => this.setState({ orders: orders }))\n  }\n\n\n  \n\n  render() { \n\n    const orders = this.state.orders.map((item, ) => {\n      let date = new Date (Date(item.date))\n      let month = [\"Enero\",\"Febrero\",\"Marzo\",\"Abril\",\"Mayo\",\"Junio\",\"Julio\",\"Agosto\",\"Septiembre\",\"Octubre\",\"Noviembre\",\"Diciembre\"];\n      let dateCreate= (date.getDate() + \" de \" + month[date.getMonth()] + \" de \" + date.getFullYear());\n      let time = date.getHours() + \":\" + date.getMinutes();   \n      return (\n\n        <div className=\"post\">\n             <div className=\"postfont\">\n             <p>mesero: {item.waiter}</p> \n             <p>mesa: {item.table}</p> \n             <p>fecha: {dateCreate}</p> \n             <p>hora: {time}</p>  \n             <h4>pedido:</h4> \n             </div>\n    <Paper>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <TableCell>Productos</TableCell>\n            <TableCell>Valor</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <Products orders={item.order}></Products>\n        </TableBody>\n      </Table>\n    </Paper>\n                 \n        </div>        \n      )\n    })\n    return ( \n      <div>\n      <p className=\"barMenu3\">HISTORIAL DE PEDIDOS </p>\n          <Grid container spacing={1}>\n             {orders}\n            </Grid>     \n        </div>\n     );\n  }\n}\n\nexport default OrdersRecords;","import React from 'react';\nimport '../App.css';\nimport retrieve from '../data/data.js';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Products from './products';\nimport firebase from '../data/firebase.js'\n\n\n\nclass OrdersInKitchen extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n     orders:[]\n    }\n  }\n\n  componentDidMount() {\n    retrieve(\"kitchen\")\n    .then(orders => this.setState({ orders: orders }))\n  }\n   \n  changeState=(e)=>{\n\n    let id= e.currentTarget.value\n    const db = firebase.firestore();\n    const data = db.collection('orders');\n    data.doc(id).set({\n      state:\"ready\"\n      }, \n      { merge: true })\n    .then (()=>{\n      this.componentDidMount();\n      }\n     )\n    }\n\n  render() { \n\n    const orders = this.state.orders.map((item, ) => {\n      let date = new Date (Date(item.date))\n      let month = [\"Enero\",\"Febrero\",\"Marzo\",\"Abril\",\"Mayo\",\"Junio\",\"Julio\",\"Agosto\",\"Septiembre\",\"Octubre\",\"Noviembre\",\"Diciembre\"];\n      let dateCreate= (date.getDate() + \" de \" + month[date.getMonth()] + \" de \" + date.getFullYear());\n      let time = date.getHours() + \":\" + date.getMinutes();   \n      return (\n        \n        <div className=\"post\">\n          <div className=\"postfont\">\n          <p>Mesero: {item.waiter}</p> \n          <p>Mesa: {item.table}</p> \n          <p>Fecha: {dateCreate}</p> \n          <p>Hora: {time}</p>  \n         <h4>Pedido:</h4> \n         </div>\n         <Paper>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Productos</TableCell>\n                  <TableCell>Valor</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                <Products orders={item.order}></Products>\n              </TableBody>\n            </Table>\n          </Paper>\n       \n          <Button className=\"button\" value={item.id} onClick={this.changeState}>Pedido Listo</Button>         \n        </div>        \n      )\n    })\n     return ( \n      <div>\n        <p className=\"barMenu3\">PROCESANDO PEDIDO EN COCINA</p>\n          <Grid container spacing={1}>\n            {orders}\n          </Grid>\n      </div>\n     );\n  }\n}\n\nexport default OrdersInKitchen;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n// import 'bootstrap/dist/css/bootstrap.min.css';\n\n//importando material-iu\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\n//importando los componentes\nimport Menu from './views/Menu';\nimport OrdersReady from './views/OrdersReady';\nimport OrdersRecords from './views/OrdersRecords';\nimport OrdesInKitchen from './views/OrdesInKitchen';\n\nfunction LinkTab(props) {\n  return ( \n    <Tab component={Link} {...props}/>\n  );\n}\n //rerejillas\n const useStyles = makeStyles({\n  root: {\n    flexGrow: 1,\n  },\n})\n\nfunction App() {\n  \n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  return (\n    <div>\n    <Grid container spacing={12}>\n      <Grid item xs={12}>\n        <h1 className=\"title\">VurgerQueen</h1>\n      </Grid>\n     <Router>\n      <div className={classes.root}>\n      <Grid item xs={12}>\n      <AppBar position=\"static\">\n        <Tabs className=\"barMenu\"  \n        value={value}\n        onChange={handleChange}\n        centered>\n          <LinkTab label=\"MENU\" to={\"/menu\"}/>\n          <LinkTab label=\"COCINA\" to=\"/ordesinkitchen\"/>\n          <LinkTab label=\"PEDIDO LISTO\" to=\"/ordersready\"/>\n          <LinkTab label=\"HISTORIAL\" to=\"/ordersrecords\"/>\n        </Tabs>\n      </AppBar>\n      </Grid>\n\n        <Route path=\"/menu\" component={Menu}/>\n        <Route path=\"/ordesinkitchen\" component={OrdesInKitchen}/>\n        <Route path=\"/ordersready\" component={OrdersReady}/>\n        <Route path=\"/ordersrecords\" component={OrdersRecords}/>\n      </div>\n    </Router>\n      </Grid>\n      </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}